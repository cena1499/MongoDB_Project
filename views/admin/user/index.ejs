<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin page</title>
  </head>
  <body>
    <div class="display" style="background-color: red"></div>
    <h1>Users</h1>
    <%- include('../../partials/adminNavbar'); %>

    <form id="formFirstName">
      <label for="filterFirstname">Firstname filter</label><br />
      <input type="text" id="filterFirstname" /><br />

      <label for="filterLastname">Lastname filter</label><br />
      <input type="text" id="filterLastname" /><br />

      <label for="filterAddress">Address filter</label><br />
      <input type="text" id="filterAddress" /><br />

      <label for="filterPersonalID">PersonalID filter</label><br />
      <input type="text" id="filterPersonalID" /><br />
    </form>

    <ul></ul>
    <button class="logout"><a href="/logout">Log Out</a></button>
    <script>
      const ul = document.querySelector("ul");
      const display = document.querySelector(".display");
      const firstNameFilter = document.querySelector("#filterFirstname");
      const lastNameFilter = document.querySelector("#filterLastname");
      const addressFilter = document.querySelector("#filterAddress");
      const personalIDFilter = document.querySelector("#filterPersonalID");

      const form = document.querySelector("#formFirstName");

      const getUsers = async () => {
        const res = await fetch("/api/auth/getUsers");
        const data = await res.json();
        ul.innerHTML = "";
        data.user.map((mappedUser) => {
          if (mappedUser.username !== "Admin") {
            let li = `
              <li>
                <b>Firstname</b> => ${mappedUser.firstname} <br>
                <b>Lastname</b> => ${mappedUser.lastname} <br>
                <b>PersonalID</b> => ${mappedUser.personalID} <br>
                <b>Address</b> => ${mappedUser.address} <br>
                <b>Username</b> => ${mappedUser.username} <br>

                <b>Confirmation</b> => ${mappedUser.confirmation} <br>

                <b>Ban</b> => ${mappedUser.ban} <br>
                <b>Role</b> => ${mappedUser.role} <br>
                <b>ID</b> => ${mappedUser.id}<br>
              </li>
              <a href="/admin/detail-user/${mappedUser.id}">Detail</a>
              <a href="/admin/edit-user/${mappedUser.id}">Edit</a>
              ${
                !mappedUser.confirmation
                  ? `<div><button class="confirm">Confirm user</button></div>`
                  : `<div class="confirm">Was confirmed</div>`
              }
              ${
                !mappedUser.ban
                  ? ` <button class="ban">Ban user</button>`
                  : `<button class="ban">Unban user</button>`
              }
              <button class="delete">Delete User</button>
              `;
            ul.innerHTML += li;
          } else {
            return null;
          }
          const deleteUser = document.querySelectorAll(".delete");
          const confirmUser = document.querySelectorAll(".confirm");
          const banUser = document.querySelectorAll(".ban");

          confirmUser.forEach((button, i) => {
            button.addEventListener("click", async () => {
              display.textContent = "";
              const id = data.user[i].id;
              const confirmation = data.user[i].confirmation;
              const res = await fetch("/api/auth/confirmUser", {
                method: "PUT",
                body: JSON.stringify({ confirmation, id }),
                headers: { "Content-Type": "application/json" },
              });
              const dataUpdate = await res.json();
              if (res.status === 400 || res.status === 401) {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                return (display.textContent = `${dataUpdate.message}. ${
                  dataUpdate.error ? dataUpdate.error : ""
                }`);
              }
              location.assign("/admin/users");
            });
          });

          banUser.forEach((button, i) => {
            button.addEventListener("click", async () => {
              display.textContent = "";
              const id = data.user[i].id;
              const ban = data.user[i].ban;
              if (ban == false) {
                const res = await fetch("/api/auth/banUser", {
                  method: "PUT",
                  body: JSON.stringify({ ban, id }),
                  headers: { "Content-Type": "application/json" },
                });
                const dataUpdate = await res.json();
              } else {
                const res = await fetch("/api/auth/unbanUser", {
                  method: "PUT",
                  body: JSON.stringify({ ban, id }),
                  headers: { "Content-Type": "application/json" },
                });
              }
              if (res.status === 400 || res.status === 401) {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                return (display.textContent = `${dataUpdate.message}. ${
                  dataUpdate.error ? dataUpdate.error : ""
                }`);
              }
              location.assign("/admin/users");
            });
          });

          deleteUser.forEach((button, i) => {
            button.addEventListener("click", async () => {
              display.textContent = "";
              const id = data.user[i].id;
              const res = await fetch("/api/auth/deleteUser", {
                method: "DELETE",
                body: JSON.stringify({ id }),
                headers: { "Content-Type": "application/json" },
              });
              const dataDelete = await res.json();
              if (res.status === 401) {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                return (display.textContent = `${dataUpdate.message}. ${
                  dataUpdate.error ? dataUpdate.error : ""
                }`);
              }
              location.assign("/admin/users");
            });
          });
        });
      };

      formFirstName.addEventListener("keyup", async (e) => {
        if (
          firstNameFilter.value.length >= 3 ||
          lastNameFilter.value.length >= 3 ||
          addressFilter.value.length >= 3 ||
          personalIDFilter.value.length >= 3
        ) {
          e.preventDefault();
          display.textContent = "";
          var firstnameFilterValue = "";
          var lastnameFilterValue = "";
          var addressFilterValue = "";
          var personalIDFilterValue = "";

          if (firstNameFilter.value.length >= 3) {
            firstnameFilterValue = firstNameFilter.value;
          }
          if (lastNameFilter.value.length >= 3) {
            lastnameFilterValue = lastNameFilter.value;
          }
          if (addressFilter.value.length >= 3) {
            addressFilterValue = addressFilter.value;
          }
          if (personalIDFilter.value.length >= 3) {
            personalIDFilterValue = personalIDFilter.value;
          }

          try {
            //console.log(firstNameFilter.value); OK
            const res = await fetch("/api/auth/getUsersByFilter", {
              method: "POST",
              body: JSON.stringify({
                filterFirstName: firstnameFilterValue,
                filterLastName: lastnameFilterValue,
                filterAddress: addressFilterValue,
                filterPersonalID: personalIDFilterValue,
              }),
              headers: { "Content-Type": "application/json" },
            });
            const data = await res.json();
            if (res.status === 400 || res.status === 401) {
              return (display.textContent = `${data.message}. ${
                data.error ? data.error : ""
              }`);
            }

            if (data.user.length == 0) {
              ul.innerHTML = "";
            }

            ul.innerHTML = "";
            data.user.map((mappedUser) => {
              if (mappedUser.username !== "Admin") {
                let li = `
              <li>
                <b>Firstname</b> => ${mappedUser.firstname} <br>
                <b>Lastname</b> => ${mappedUser.lastname} <br>
                <b>PersonalID</b> => ${mappedUser.personalID} <br>
                <b>Address</b> => ${mappedUser.address} <br>
                <b>Username</b> => ${mappedUser.username} <br>

                <b>Confirmation</b> => ${mappedUser.confirmation} <br>

                <b>Ban</b> => ${mappedUser.ban} <br>
                <b>Role</b> => ${mappedUser.role} <br>
                <b>ID</b> => ${mappedUser.id}<br>
              </li>
              <a href="/admin/detail-user/${mappedUser.id}">Detail</a>
              <a href="/admin/edit-user/${mappedUser.id}">Edit</a>
              ${
                !mappedUser.confirmation
                  ? `<div><button class="confirm">Confirm user</button></div>`
                  : `<div class="confirm">Was confirmed</div>`
              }
              ${
                !mappedUser.ban
                  ? ` <button class="ban">Ban user</button>`
                  : `<button class="ban">Unban user</button>`
              }
              <button class="delete">Delete User</button>
              `;
                ul.innerHTML += li;
              } else {
                return null;
              }

              const deleteUser = document.querySelectorAll(".delete");
              const confirmUser = document.querySelectorAll(".confirm");
              const banUser = document.querySelectorAll(".ban");

              confirmUser.forEach((button, i) => {
                button.addEventListener("click", async () => {
                  display.textContent = "";
                  const id = data.user[i].id;
                  const confirmation = data.user[i].confirmation;
                  const res = await fetch("/api/auth/confirmUser", {
                    method: "PUT",
                    body: JSON.stringify({ confirmation, id }),
                    headers: { "Content-Type": "application/json" },
                  });
                  const dataUpdate = await res.json();
                  if (res.status === 400 || res.status === 401) {
                    document.body.scrollTop = 0;
                    document.documentElement.scrollTop = 0;
                    return (display.textContent = `${dataUpdate.message}. ${
                      dataUpdate.error ? dataUpdate.error : ""
                    }`);
                  }
                  location.assign("/admin/users");
                });
              });

              banUser.forEach((button, i) => {
                button.addEventListener("click", async () => {
                  display.textContent = "";
                  const id = data.user[i].id;
                  const ban = data.user[i].ban;
                  if (ban == false) {
                    const res = await fetch("/api/auth/banUser", {
                      method: "PUT",
                      body: JSON.stringify({ ban, id }),
                      headers: { "Content-Type": "application/json" },
                    });
                    const dataUpdate = await res.json();
                  } else {
                    const res = await fetch("/api/auth/unbanUser", {
                      method: "PUT",
                      body: JSON.stringify({ ban, id }),
                      headers: { "Content-Type": "application/json" },
                    });
                  }
                  if (res.status === 400 || res.status === 401) {
                    document.body.scrollTop = 0;
                    document.documentElement.scrollTop = 0;
                    return (display.textContent = `${dataUpdate.message}. ${
                      dataUpdate.error ? dataUpdate.error : ""
                    }`);
                  }
                  location.assign("/admin/users");
                });
              });

              deleteUser.forEach((button, i) => {
                button.addEventListener("click", async () => {
                  display.textContent = "";
                  const id = data.user[i].id;
                  const res = await fetch("/api/auth/deleteUser", {
                    method: "DELETE",
                    body: JSON.stringify({ id }),
                    headers: { "Content-Type": "application/json" },
                  });
                  const dataDelete = await res.json();
                  if (res.status === 401) {
                    document.body.scrollTop = 0;
                    document.documentElement.scrollTop = 0;
                    return (display.textContent = `${dataUpdate.message}. ${
                      dataUpdate.error ? dataUpdate.error : ""
                    }`);
                  }
                  location.assign("/admin/users");
                });
              });
            });
          } catch (err) {
            console.log(err.message);
          }
        } else {
          getUsers();
        }
      });

      getUsers();
    </script>
  </body>
</html>
